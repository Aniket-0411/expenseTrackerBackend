type Gender = "Male" | "Female";
type MaritalStatus = "Single" | "Married" | "Divorced" | "Widowed";
type BodyType = "Slim" | "Athletic" | "Average" | "Heavy";
type WorkoutFrequency = "Regular" | "Occasional" | "Never";
type FoodPreference = "Vegetarian" | "Non-Vegetarian" | "Eggetarian" | "Vegan";
type Habit = "Yes" | "No" | "Occasionally";
type PoliticalView = "Liberal" | "Conservative" | "Moderate" | "Apathetic";
type ReligiousView = "Devout" | "Moderate" | "Agnostic" | "Atheist";
type ChildrenView = "Want" | "Don't Want" | "Open to Discussion";
type PartnerConstraint =
  | "Same Caste"
  | "Same Religion"
  | "Same Region"
  | "No Constraints";
export type TSubscriptionType = "FREE_USER" | "USER";

export interface IBasicDetails {
  firstName: string;
  lastName: string;
  gender: Gender;
  birthday: string; // YYYY-MM-DD format
  currentCity: string;
  hometown: string;
  height: number; // in cm
  email: string;
  phoneNumber: string; // With country code
  role: TSubscriptionType;
}

export interface IWorkAndEducation {
  undergraduateCollege?: string;
  undergraduateDegree?: string;
  postgraduateCollege?: string;
  postgraduateDegree?: string;
  professionalStatus?: string;
  currentCompany?: string;
  designation?: string;
  annualIncome?: number; // In respective currency
}

export interface IBackground {
  maritalStatus: MaritalStatus;
  parentsLocation: string;
  language: string[];
  numberOfSiblings?: number;
  caste?: string;
  fatherOccupation?: string;
  motherOccupation?: string;
  religion?: string;
  briefAboutFamily?: string;
}

interface ILifestyleAndPersonality {
  bodyType?: BodyType;
  workout?: WorkoutFrequency;
  foodPreferences?: FoodPreference;
  drinkingHabits?: Habit;
  smokingHabits?: Habit;
  politicalViews?: PoliticalView;
  religiousViews?: ReligiousView;
  stayWithParents?: boolean;
  hobbies?: string[];
  personalGoals?: string;
}

export interface IPartnerPreferences {
  lookForInPartner?: string;
  partnerConstraints?: PartnerConstraint[];
  childrenViews?: ChildrenView;
  openToRelocate?: boolean;
  openToPets?: boolean;
}

export interface IPictures {
  profilePictures: string[]; // URLs or file paths
}

export interface IProofDocuments {
  aadhaarOrPassport?: string; // URL or file path
  lastCompanyPaySlip?: string; // URL or file path
  collegeDegree?: string; // URL or file path
}

export interface IAuthentication {
  username: string; // Email
  password: string; // Auto-generated by Matchmaker
  isPasswordResetRequired: string;
}

export interface IPaymentDetails {
  invoiceNumbers: string[];
  amount: number; // Total payment
  paymentDate: number; // ISO Time Stamp
  noOfMatchesProposed: number;
}

export interface IMatchmaker {
  matchmakerName: string;
  matchmakerId: string;
}

export interface IUserProfile {
  basicDetails: IBasicDetails;
  workAndEducation?: IWorkAndEducation;
  background?: IBackground;
  lifestyleAndPersonality?: ILifestyleAndPersonality;
  partnerPreferences?: IPartnerPreferences;
  pictures?: IPictures;
  proofDocuments?: IProofDocuments;
  authentication: IAuthentication;
  paymentDetails?: IPaymentDetails;
  matchmaker?: IMatchmaker;
}

export interface ICreateUserRequestBody {
  role: TSubscriptionType;
  firstName: string;
  lastName: string;
  gender: Gender;
  email: string;
  phoneNumber: string;
  invoiceNumbers: string[];
  amount: number;
  paymentDate: number; // ISO Timestamp
  noOfMatchesProposed: number;
  matchmakerId: string;
  matchmakerName: string;
}
